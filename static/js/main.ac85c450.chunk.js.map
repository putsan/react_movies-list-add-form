{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","React","createRef","onSubmit","event","preventDefault","onAdd","props","Object","keys","forEach","current","value","this","Form","field","Group","Math","random","Label","htmlFor","Control","type","name","placeholder","id","ref","required","Button","variant","Component","App","state","moviesFromServer","addMovie","setState","ReactDOM","render","document","getElementById"],"mappings":"ixEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,2BCrBGK,EAAb,4MACEf,MAAQgB,IAAMC,YADhB,EAGEhB,YAAce,IAAMC,YAHtB,EAKEf,OAASc,IAAMC,YALjB,EAOEd,QAAUa,IAAMC,YAPlB,EASEH,OAASE,IAAMC,YATjB,EAWEL,MAAQ,CACNZ,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,IAhBZ,EAmBEI,SAAW,SAACC,GACVA,EAAMC,iBADc,IAGZR,EAHY,eAGZA,MACAS,EAAU,EAAKC,MAAfD,MAERE,OAAOC,KAAKZ,GAAOa,SAAQ,SAACZ,GAC1BD,EAAMC,GAAO,EAAKA,GAAKa,QAAQC,MAC/B,EAAKd,GAAKa,QAAQC,MAAQ,MAG5BN,EAAMT,IA9BV,uDAiCY,IAAD,OACCM,EAAoBU,KAApBV,SAAUN,EAAUgB,KAAVhB,MAElB,OACE,kBAACiB,EAAA,EAAD,CACEX,SAAUA,GAEV,6CAECK,OAAOC,KAAKZ,GAAOD,KAAI,SAAAmB,GAAK,OAC3B,kBAACD,EAAA,EAAKE,MAAN,CAAYlB,IAAKmB,KAAKC,UACpB,kBAACJ,EAAA,EAAKK,MAAN,CACEC,QAAQ,aACR/B,UAAU,mBAET0B,GAGH,kBAACD,EAAA,EAAKO,QAAN,CACEC,KAAK,OACLC,KAAMR,EACNS,YAAW,gBAAWT,GACtBU,GAAE,eAAUV,GACZ1B,UAAU,kBACVqC,IAAK,EAAKX,GACVY,UAAQ,QAKd,kBAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUP,KAAK,UAA/B,eA/DR,GAA8BQ,a,QCCjBC,EAAb,4MACEC,MAAQ,CACNrC,OAAQsC,GAFZ,EAKEC,SAAW,SAACrC,GACV,EAAKsC,UAAS,SAAAH,GAAK,MAAK,CACtBrC,OAAO,CACLE,GADI,mBAEDmC,EAAMrC,cATjB,uDAcY,IACAA,EAAWkB,KAAKmB,MAAhBrC,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CAAUiB,MAAOO,KAAKqB,iBAvBhC,GAAyBJ,a,MCCzBM,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ac85c450.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button, Form } from 'react-bootstrap';\n\nexport class NewMovie extends Component {\n  title = React.createRef();\n\n  description = React.createRef();\n\n  imgUrl = React.createRef();\n\n  imdbUrl = React.createRef();\n\n  imdbId = React.createRef();\n\n  movie = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  onSubmit = (event) => {\n    event.preventDefault();\n\n    const { movie } = this;\n    const { onAdd } = this.props;\n\n    Object.keys(movie).forEach((key) => {\n      movie[key] = this[key].current.value;\n      this[key].current.value = '';\n    });\n\n    onAdd(movie);\n  }\n\n  render() {\n    const { onSubmit, movie } = this;\n\n    return (\n      <Form\n        onSubmit={onSubmit}\n      >\n        <h1>Add new movie</h1>\n\n        {Object.keys(movie).map(field => (\n          <Form.Group key={Math.random()}>\n            <Form.Label\n              htmlFor=\"movieTitle\"\n              className=\"text-capitalize\"\n            >\n              {field}\n            </Form.Label>\n\n            <Form.Control\n              type=\"text\"\n              name={field}\n              placeholder={`Enter ${field}`}\n              id={`movie${field}`}\n              className=\"text-capitalize\"\n              ref={this[field]}\n              required\n            />\n          </Form.Group>\n        ))}\n\n        <Button variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [\n        movie,\n        ...state.movies,\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}